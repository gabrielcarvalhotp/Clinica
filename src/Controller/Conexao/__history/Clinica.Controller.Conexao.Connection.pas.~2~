unit Clinica.Controller.Conexao.Connection;
interface

uses
  Clinica.Model.Conexao.Interfaces,
  Clinica.Controller.Conexao.Interfaces;

type
  TControllerConexaoConectar = class(TInterfacedObject,
    iControllerFactoryConexao)
  private
    { private }
  public
    { public }
    constructor Create;
    destructor Destroy; override;
    class function New: iControllerFactoryConexao;
    function Conectar: iModelConexao;
  end;

implementation

uses
  Clinica.Model.Conexao.Conectar;

{ TControllerConexaoConectar }

function TControllerConexaoConectar.Conectar: iModelConexao;
begin
  result := TModelConexaoConectar
            .new
             .paramentros
              .DataBase('C:\DB\DATABASETESTES.FDB')
               .UserName('SYSDBA')
                .Password('masterkey')
                 .DriverId('FB')
                  .Server('localhost')
                   .Porta('3050')
  .&End             .Conectar;                  
end;

constructor TControllerConexaoConectar.Create;
begin

end;

destructor TControllerConexaoConectar.Destroy;
begin
  inherited;

end;

class function TControllerConexaoConectar.New: iControllerFactoryConexao;
begin
  result := self.Create;
end;

end.                                                                                   
