unit Clinica.Model.PesquisaPermicao;

interface

uses
  Clinica.Model.Interfaces.PesquisaPermicao,
  System.Classes,
  Clinica.Model.Entidades.Interfaces.Permicoes, System.Generics.Collections;

type
  TModelPesquisaPermicao = class(TInterfacedObject, iModelInterfacesPesquisaPermicao)
  private
    { private }
    FPermicao : string;
  public
    { public }
    constructor Create;
    destructor Destroy; override;
    class function New: iModelInterfacesPesquisaPermicao;
    function Permicao(aValue : string) : iModelInterfacesPesquisaPermicao;
    function Pesquisa(aValue : TList<iModelEntidadesInterfacesPermicoes>) : integer;
  end;

implementation

{ TModelPesquisaPermicao }

{ TModelPesquisaPermicao }

constructor TModelPesquisaPermicao.Create;
begin

end;

destructor TModelPesquisaPermicao.Destroy;
begin

  inherited;
end;

class function TModelPesquisaPermicao.New: iModelInterfacesPesquisaPermicao;
begin

end;

function TModelPesquisaPermicao.Permicao(aValue: string): iModelInterfacesPesquisaPermicao;
begin
  result := self;
  FPermicao := aValue;
end;

function TModelPesquisaPermicao.Pesquisa(aValue: TList<iModelEntidadesInterfacesPermicoes>): integer;
var
  i : integer;
begin
  for I := 0 to aValue.Count - 1 do
  begin
    if aValue[i].Padrao.Nome = FPermicao then
      result := i
    else
      raise Exception.Create('Você não tem essa Permição');
  end;
    
end;

end.
