unit Clinica.View.Agendamentos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Clinica.View.CadPadrao, Data.DB,
  Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls,
  Vcl.Buttons, Vcl.WinXPanels, Vcl.ExtCtrls, Vcl.ComCtrls,
  Clinica.Controller.Pesquisa.Pacientes, 
  Clinica.Controller.Interfaces.Pesquisa,
  Vcl.WinXPickers, System.UITypes,
  Clinica.Model.Entidades.Interfaces.Agendamentos;

type
  TFrmCadAgendamentos = class(TFrmCadPadrao)
    Label3: TLabel;
    edId: TEdit;
    Label5: TLabel;
    edDataCadastro: TDateTimePicker;
    Label6: TLabel;
    edDataAtualizacao: TDateTimePicker;
    Label4: TLabel;
    edPacienteId: TEdit;
    SpdBtnPesquisa: TSpeedButton;
    Label7: TLabel;
    edNomePaciente: TEdit;
    Label8: TLabel;
    Label9: TLabel;
    edDataConsulta: TDateTimePicker;
    edHoraConsulta: TTimePicker;
    CBTipoConsulta: TComboBox;
    Label10: TLabel;
    Label11: TLabel;
    edNomeMedico: TEdit;
    edValorConsulta: TEdit;
    Label12: TLabel;
    btnCalcular: TButton;
    procedure SpdBtnPesquisaClick(Sender: TObject);
    procedure edPacienteIdChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure edPacienteIdExit(Sender: TObject);
    procedure btnCalcularClick(Sender: TObject);
    procedure CBTipoConsultaChange(Sender: TObject);
    procedure BitBtnSalvarClick(Sender: TObject);
    procedure BitBtnDaletarClick(Sender: TObject);
    procedure BitBtnAlterarClick(Sender: TObject);
    procedure BitBtnInserirClick(Sender: TObject);
    procedure BitBtnCancelarClick(Sender: TObject);
  private
    { Private declarations }
    FAgendamentos: iModelEntidadesInterfacesAgendamentos;
    FPesquisa: iControllerInterfacesPesquisaPacientes;
    procedure LimpaCampos;
  public
    { Public declarations }
  end;

implementation

uses
  Clinica.View.LookUpPadrao, 
  Clinica.Controller.ValorConsulta,
  Clinica.Controller.Entidades.Agendamentos, 
  Clinica.Controller.Entidades.Usuarios;

{$R *.dfm}

procedure TFrmCadAgendamentos.BitBtnAlterarClick(Sender: TObject);
begin
  inherited;
  FAgendamentos.Todos;
  LimpaCampos;
  edId.Text := FAgendamentos.DataSet.FieldByName('ID_AGENDAMENTO');
  edDataCadastro.Date := FAgendamentos.DataSet.FieldByName('DATA_CADASTRO');
  edDataAtualizacao.Date := FAgendamentos.DataSet.FieldByName('DATA_ALTERACAO');
  edPacienteId.Text := FAgendamentos.DataSet.FieldByName('ID_PACIENTE');
  edDataConsulta.Date := FAgendamentos.DataSet.FieldByName('DATA_CONSULTA');
  edHoraConsulta.Time := FAgendamentos.DataSet.FieldByName('HORA_CONSULTA');
  CBTipoConsulta.Text := FAgendamentos.DataSet.FieldByName('TIPO_CONSULTA');
  edNomeMedico.Text := FAgendamentos.DataSet.FieldByName('MEDICO_CONSULTA');
  edValorConsulta.Text := FAgendamentos.DataSet.FieldByName('VALOR_CONSULTA');
  edPacienteIdExit(edPacienteId);
end;

procedure TFrmCadAgendamentos.BitBtnCancelarClick(Sender: TObject);
begin
  if MessageDlg('Deseja Cancelar?', mtConfirmation, [mbYes, mbNo], 0) <> mrYes then
    abort;
  FAgendamentos.Grid;
  inherited;
end;

procedure TFrmCadAgendamentos.BitBtnDaletarClick(Sender: TObject);
begin
  inherited;
  if MessageDlg('Deseja Deletar?', mtConfirmation, [mbYes, mbNo], 0) <> mrYes then
    Abort;
  DataSource1.DataSet.Delete;
end;

procedure TFrmCadAgendamentos.BitBtnInserirClick(Sender: TObject);
begin
  inherited;
  FAgendamentos.Todos;
  LimpaCampos;
  edId.Text := '-1';
  edDataCadastro.DateTime := now;
  edDataAtualizacao.DateTime := StrToDateTime('01/01/1899 00:00:00');
end;

procedure TFrmCadAgendamentos.BitBtnSalvarClick(Sender: TObject);
begin
  if MessageDlg('Deseja salvar?', mtConfirmation, [mbYes, mbNo], 0) <> mrYes then
    abort;
    
  FAgendamentos
    .Padrao
    .Id(edId.text)
    .Data_Cadastro(edDataCadastro.DateTime)
    .Data_Alteracao(edDataAtualizacao.DateTime)
    .Usuario_Alteracao(TControllerEntidadesUsuarios.New.UsuarioLogado.Padrao.Id)
    .&End
    .Id_Paciente(edPacienteId.Text)
    .Tipo_Consulta(CBTipoConsulta.Text)
    .Data_Consulta(edDataConsulta.Date)
    .Hora_Consulta(edHoraConsulta.Time)
    .Medico_Consulta(edNomeMedico.Text)
    .Valor_Consulta(edValorConsulta.Text)
    .DAO;

  DataSource1.DataSet.Refresh;
  DBGridPesquisa.Refresh;
  FAgendamentos.Grid;
  inherited;
end;

procedure TFrmCadAgendamentos.btnCalcularClick(Sender: TObject);
begin
  inherited;
  TControllerValorConsulta.New.Calcular(CBTipoConsulta.Text, FPesquisa.Paciente.Plano_Saude, edValorConsulta);
end;

procedure TFrmCadAgendamentos.CBTipoConsultaChange(Sender: TObject);
begin
  inherited;
  edValorConsulta.Text := '';
end;

procedure TFrmCadAgendamentos.edPacienteIdChange(Sender: TObject);
begin
  inherited;
  edNomePaciente.Text := FPesquisa.Nome;
  edValorConsulta.Text := '';
end;

procedure TFrmCadAgendamentos.edPacienteIdExit(Sender: TObject);
begin
  inherited;
  try
    FPesquisa.Paciente(edPacienteId.Text);
    edNomePaciente.Text := FPesquisa.Nome;
  except
    edPacienteId.Text := '';
    edNomePaciente.Text := '';
    ShowMessage('Paciente não existe!');
  end;
end;

procedure TFrmCadAgendamentos.FormCreate(Sender: TObject);
begin
  inherited;
  FAgendamentos := TControllerEntidadesAgendamentos.New.CriarAgendamento;
  FAgendamentos.DataSource(DataSource1);
  FPesquisa := TControllerPesquisaPacientes.New;
end;

procedure TFrmCadAgendamentos.LimpaCampos;
begin
  edId.Text := '';
  edPacienteId.Text := '';
  edDataConsulta.Date := now;
  edNomePaciente.Text := '';
  edNomeMedico.Text := '';
  CBTipoConsulta.ItemIndex := 0;
  edValorConsulta.Text := '';
end;

procedure TFrmCadAgendamentos.SpdBtnPesquisaClick(Sender: TObject);
begin
  FPesquisa.Pesquisar;
  edPacienteId.Text := FPesquisa.Id;
  inherited;
end;

end.
